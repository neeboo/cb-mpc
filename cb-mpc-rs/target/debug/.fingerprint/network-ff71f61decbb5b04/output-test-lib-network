{"$message_type":"diagnostic","message":"type `int_least8_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":30955,"byte_end":30967,"line_start":806,"line_end":806,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type int_least8_t = i8;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":30955,"byte_end":30967,"line_start":806,"line_end":806,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type int_least8_t = i8;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"IntLeast8T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `int_least8_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:806:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m806\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type int_least8_t = i8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntLeast8T`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `int_least16_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":30983,"byte_end":30996,"line_start":807,"line_end":807,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type int_least16_t = i16;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":30983,"byte_end":30996,"line_start":807,"line_end":807,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type int_least16_t = i16;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"IntLeast16T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `int_least16_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:807:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m807\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type int_least16_t = i16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntLeast16T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `int_least32_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31013,"byte_end":31026,"line_start":808,"line_end":808,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type int_least32_t = i32;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31013,"byte_end":31026,"line_start":808,"line_end":808,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type int_least32_t = i32;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"IntLeast32T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `int_least32_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:808:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m808\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type int_least32_t = i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntLeast32T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `int_least64_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31043,"byte_end":31056,"line_start":809,"line_end":809,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type int_least64_t = i64;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31043,"byte_end":31056,"line_start":809,"line_end":809,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type int_least64_t = i64;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"IntLeast64T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `int_least64_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:809:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m809\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type int_least64_t = i64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntLeast64T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uint_least8_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31073,"byte_end":31086,"line_start":810,"line_end":810,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type uint_least8_t = u8;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31073,"byte_end":31086,"line_start":810,"line_end":810,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type uint_least8_t = u8;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"UintLeast8T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uint_least8_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:810:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m810\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uint_least8_t = u8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintLeast8T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uint_least16_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31102,"byte_end":31116,"line_start":811,"line_end":811,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type uint_least16_t = u16;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31102,"byte_end":31116,"line_start":811,"line_end":811,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type uint_least16_t = u16;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"UintLeast16T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uint_least16_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:811:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m811\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uint_least16_t = u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintLeast16T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uint_least32_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31133,"byte_end":31147,"line_start":812,"line_end":812,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type uint_least32_t = u32;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31133,"byte_end":31147,"line_start":812,"line_end":812,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type uint_least32_t = u32;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"UintLeast32T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uint_least32_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:812:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m812\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uint_least32_t = u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintLeast32T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uint_least64_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31164,"byte_end":31178,"line_start":813,"line_end":813,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type uint_least64_t = u64;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31164,"byte_end":31178,"line_start":813,"line_end":813,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type uint_least64_t = u64;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"UintLeast64T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uint_least64_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:813:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m813\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uint_least64_t = u64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintLeast64T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `int_fast8_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31195,"byte_end":31206,"line_start":814,"line_end":814,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type int_fast8_t = i8;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31195,"byte_end":31206,"line_start":814,"line_end":814,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type int_fast8_t = i8;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"IntFast8T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `int_fast8_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:814:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m814\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type int_fast8_t = i8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntFast8T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `int_fast16_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31222,"byte_end":31234,"line_start":815,"line_end":815,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type int_fast16_t = i16;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31222,"byte_end":31234,"line_start":815,"line_end":815,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type int_fast16_t = i16;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"IntFast16T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `int_fast16_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:815:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m815\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type int_fast16_t = i16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntFast16T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `int_fast32_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31251,"byte_end":31263,"line_start":816,"line_end":816,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type int_fast32_t = i32;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31251,"byte_end":31263,"line_start":816,"line_end":816,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type int_fast32_t = i32;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"IntFast32T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `int_fast32_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:816:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m816\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type int_fast32_t = i32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntFast32T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `int_fast64_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31280,"byte_end":31292,"line_start":817,"line_end":817,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type int_fast64_t = i64;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31280,"byte_end":31292,"line_start":817,"line_end":817,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type int_fast64_t = i64;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"IntFast64T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `int_fast64_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:817:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m817\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type int_fast64_t = i64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntFast64T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uint_fast8_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31309,"byte_end":31321,"line_start":818,"line_end":818,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type uint_fast8_t = u8;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31309,"byte_end":31321,"line_start":818,"line_end":818,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type uint_fast8_t = u8;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"UintFast8T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uint_fast8_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:818:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m818\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uint_fast8_t = u8;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintFast8T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uint_fast16_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31337,"byte_end":31350,"line_start":819,"line_end":819,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type uint_fast16_t = u16;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31337,"byte_end":31350,"line_start":819,"line_end":819,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type uint_fast16_t = u16;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"UintFast16T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uint_fast16_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:819:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m819\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uint_fast16_t = u16;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintFast16T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uint_fast32_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31367,"byte_end":31380,"line_start":820,"line_end":820,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type uint_fast32_t = u32;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31367,"byte_end":31380,"line_start":820,"line_end":820,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type uint_fast32_t = u32;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"UintFast32T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uint_fast32_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:820:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m820\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uint_fast32_t = u32;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintFast32T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uint_fast64_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31397,"byte_end":31410,"line_start":821,"line_end":821,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type uint_fast64_t = u64;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31397,"byte_end":31410,"line_start":821,"line_end":821,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type uint_fast64_t = u64;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"UintFast64T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uint_fast64_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:821:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m821\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uint_fast64_t = u64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintFast64T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__int8_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31427,"byte_end":31435,"line_start":822,"line_end":822,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type __int8_t = ::std::os::raw::c_schar;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31427,"byte_end":31435,"line_start":822,"line_end":822,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type __int8_t = ::std::os::raw::c_schar;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"Int8T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__int8_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:822:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m822\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __int8_t = ::std::os::raw::c_schar;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int8T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__uint8_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31472,"byte_end":31481,"line_start":823,"line_end":823,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type __uint8_t = ::std::os::raw::c_uchar;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31472,"byte_end":31481,"line_start":823,"line_end":823,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type __uint8_t = ::std::os::raw::c_uchar;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"Uint8T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__uint8_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:823:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m823\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __uint8_t = ::std::os::raw::c_uchar;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Uint8T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__int16_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31518,"byte_end":31527,"line_start":824,"line_end":824,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type __int16_t = ::std::os::raw::c_short;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31518,"byte_end":31527,"line_start":824,"line_end":824,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type __int16_t = ::std::os::raw::c_short;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"Int16T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__int16_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:824:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m824\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __int16_t = ::std::os::raw::c_short;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int16T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__uint16_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31564,"byte_end":31574,"line_start":825,"line_end":825,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type __uint16_t = ::std::os::raw::c_ushort;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31564,"byte_end":31574,"line_start":825,"line_end":825,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type __uint16_t = ::std::os::raw::c_ushort;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"Uint16T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__uint16_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:825:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m825\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __uint16_t = ::std::os::raw::c_ushort;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Uint16T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__int32_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31612,"byte_end":31621,"line_start":826,"line_end":826,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type __int32_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31612,"byte_end":31621,"line_start":826,"line_end":826,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type __int32_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"Int32T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__int32_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:826:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m826\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __int32_t = ::std::os::raw::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int32T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__uint32_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31656,"byte_end":31666,"line_start":827,"line_end":827,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type __uint32_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31656,"byte_end":31666,"line_start":827,"line_end":827,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type __uint32_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"Uint32T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__uint32_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:827:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m827\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __uint32_t = ::std::os::raw::c_uint;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Uint32T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__int64_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31702,"byte_end":31711,"line_start":828,"line_end":828,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type __int64_t = ::std::os::raw::c_longlong;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31702,"byte_end":31711,"line_start":828,"line_end":828,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type __int64_t = ::std::os::raw::c_longlong;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"Int64T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__int64_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:828:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m828\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __int64_t = ::std::os::raw::c_longlong;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Int64T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__uint64_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31751,"byte_end":31761,"line_start":829,"line_end":829,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type __uint64_t = ::std::os::raw::c_ulonglong;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31751,"byte_end":31761,"line_start":829,"line_end":829,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type __uint64_t = ::std::os::raw::c_ulonglong;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"Uint64T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__uint64_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:829:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m829\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __uint64_t = ::std::os::raw::c_ulonglong;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Uint64T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_intptr_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31802,"byte_end":31819,"line_start":830,"line_end":830,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __darwin_intptr_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31802,"byte_end":31819,"line_start":830,"line_end":830,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __darwin_intptr_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"DarwinIntptrT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_intptr_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:830:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m830\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_intptr_t = ::std::os::raw::c_long;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinIntptrT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_natural_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31855,"byte_end":31873,"line_start":831,"line_end":831,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_natural_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31855,"byte_end":31873,"line_start":831,"line_end":831,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_natural_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"DarwinNaturalT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_natural_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:831:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m831\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_natural_t = ::std::os::raw::c_uint;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinNaturalT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_ct_rune_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31909,"byte_end":31927,"line_start":832,"line_end":832,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_ct_rune_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":31909,"byte_end":31927,"line_start":832,"line_end":832,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_ct_rune_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"DarwinCtRuneT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_ct_rune_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:832:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_ct_rune_t = ::std::os::raw::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinCtRuneT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_mbstate_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32597,"byte_end":32615,"line_start":848,"line_end":848,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_mbstate_t = __mbstate_t;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32597,"byte_end":32615,"line_start":848,"line_end":848,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_mbstate_t = __mbstate_t;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"DarwinMbstateT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_mbstate_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:848:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m848\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_mbstate_t = __mbstate_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinMbstateT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_ptrdiff_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32640,"byte_end":32658,"line_start":849,"line_end":849,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32640,"byte_end":32658,"line_start":849,"line_end":849,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"DarwinPtrdiffT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_ptrdiff_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:849:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m849\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_ptrdiff_t = ::std::os::raw::c_long;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPtrdiffT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_size_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32694,"byte_end":32709,"line_start":850,"line_end":850,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_size_t = ::std::os::raw::c_ulong;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32694,"byte_end":32709,"line_start":850,"line_end":850,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_size_t = ::std::os::raw::c_ulong;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"DarwinSizeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_size_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:850:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m850\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_size_t = ::std::os::raw::c_ulong;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinSizeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_va_list` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32746,"byte_end":32762,"line_start":851,"line_end":851,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_va_list = __builtin_va_list;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32746,"byte_end":32762,"line_start":851,"line_end":851,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_va_list = __builtin_va_list;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":"DarwinVaList","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_va_list` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:851:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m851\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_va_list = __builtin_va_list;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinVaList`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_wchar_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32793,"byte_end":32809,"line_start":852,"line_end":852,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_wchar_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32793,"byte_end":32809,"line_start":852,"line_end":852,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_wchar_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":"DarwinWcharT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_wchar_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:852:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m852\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_wchar_t = ::std::os::raw::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinWcharT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_rune_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32844,"byte_end":32859,"line_start":853,"line_end":853,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_rune_t = __darwin_wchar_t;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32844,"byte_end":32859,"line_start":853,"line_end":853,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_rune_t = __darwin_wchar_t;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"DarwinRuneT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_rune_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:853:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m853\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_rune_t = __darwin_wchar_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinRuneT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_wint_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32889,"byte_end":32904,"line_start":854,"line_end":854,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_wint_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32889,"byte_end":32904,"line_start":854,"line_end":854,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_wint_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"DarwinWintT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_wint_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:854:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m854\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_wint_t = ::std::os::raw::c_int;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinWintT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_clock_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32939,"byte_end":32955,"line_start":855,"line_end":855,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_clock_t = ::std::os::raw::c_ulong;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32939,"byte_end":32955,"line_start":855,"line_end":855,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_clock_t = ::std::os::raw::c_ulong;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":"DarwinClockT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_clock_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:855:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m855\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_clock_t = ::std::os::raw::c_ulong;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinClockT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_socklen_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32992,"byte_end":33010,"line_start":856,"line_end":856,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_socklen_t = __uint32_t;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32992,"byte_end":33010,"line_start":856,"line_end":856,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_socklen_t = __uint32_t;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"DarwinSocklenT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_socklen_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:856:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m856\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_socklen_t = __uint32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinSocklenT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_ssize_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33034,"byte_end":33050,"line_start":857,"line_end":857,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_ssize_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33034,"byte_end":33050,"line_start":857,"line_end":857,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_ssize_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":"DarwinSsizeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_ssize_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:857:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m857\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_ssize_t = ::std::os::raw::c_long;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinSsizeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_time_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33086,"byte_end":33101,"line_start":858,"line_end":858,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_time_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33086,"byte_end":33101,"line_start":858,"line_end":858,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_time_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"DarwinTimeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_time_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:858:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m858\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_time_t = ::std::os::raw::c_long;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinTimeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_blkcnt_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33137,"byte_end":33154,"line_start":859,"line_end":859,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __darwin_blkcnt_t = __int64_t;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33137,"byte_end":33154,"line_start":859,"line_end":859,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __darwin_blkcnt_t = __int64_t;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"DarwinBlkcntT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_blkcnt_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:859:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m859\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_blkcnt_t = __int64_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinBlkcntT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_blksize_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33177,"byte_end":33195,"line_start":860,"line_end":860,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_blksize_t = __int32_t;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33177,"byte_end":33195,"line_start":860,"line_end":860,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_blksize_t = __int32_t;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"DarwinBlksizeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_blksize_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:860:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m860\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_blksize_t = __int32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinBlksizeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_dev_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33218,"byte_end":33232,"line_start":861,"line_end":861,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_dev_t = __int32_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33218,"byte_end":33232,"line_start":861,"line_end":861,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_dev_t = __int32_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"DarwinDevT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_dev_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:861:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m861\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_dev_t = __int32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinDevT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_fsblkcnt_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33255,"byte_end":33274,"line_start":862,"line_end":862,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33255,"byte_end":33274,"line_start":862,"line_end":862,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":"DarwinFsblkcntT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_fsblkcnt_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:862:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m862\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinFsblkcntT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_fsfilcnt_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33310,"byte_end":33329,"line_start":863,"line_end":863,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33310,"byte_end":33329,"line_start":863,"line_end":863,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":"DarwinFsfilcntT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_fsfilcnt_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:863:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m863\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinFsfilcntT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_gid_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33365,"byte_end":33379,"line_start":864,"line_end":864,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_gid_t = __uint32_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33365,"byte_end":33379,"line_start":864,"line_end":864,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_gid_t = __uint32_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"DarwinGidT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_gid_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:864:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m864\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_gid_t = __uint32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinGidT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_id_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33403,"byte_end":33416,"line_start":865,"line_end":865,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type __darwin_id_t = __uint32_t;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33403,"byte_end":33416,"line_start":865,"line_end":865,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type __darwin_id_t = __uint32_t;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"DarwinIdT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_id_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:865:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m865\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_id_t = __uint32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinIdT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_ino64_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33440,"byte_end":33456,"line_start":866,"line_end":866,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_ino64_t = __uint64_t;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33440,"byte_end":33456,"line_start":866,"line_end":866,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_ino64_t = __uint64_t;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":"DarwinIno64T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_ino64_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:866:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m866\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_ino64_t = __uint64_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinIno64T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_ino_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33480,"byte_end":33494,"line_start":867,"line_end":867,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_ino_t = __darwin_ino64_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33480,"byte_end":33494,"line_start":867,"line_end":867,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_ino_t = __darwin_ino64_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"DarwinInoT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_ino_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:867:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m867\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_ino_t = __darwin_ino64_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinInoT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_mach_port_name_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33524,"byte_end":33549,"line_start":868,"line_end":868,"column_start":10,"column_end":35,"is_primary":true,"text":[{"text":"pub type __darwin_mach_port_name_t = __darwin_natural_t;","highlight_start":10,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33524,"byte_end":33549,"line_start":868,"line_end":868,"column_start":10,"column_end":35,"is_primary":true,"text":[{"text":"pub type __darwin_mach_port_name_t = __darwin_natural_t;","highlight_start":10,"highlight_end":35}],"label":null,"suggested_replacement":"DarwinMachPortNameT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_mach_port_name_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:868:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m868\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_mach_port_name_t = __darwin_natural_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinMachPortNameT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_mach_port_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33581,"byte_end":33601,"line_start":869,"line_end":869,"column_start":10,"column_end":30,"is_primary":true,"text":[{"text":"pub type __darwin_mach_port_t = __darwin_mach_port_name_t;","highlight_start":10,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33581,"byte_end":33601,"line_start":869,"line_end":869,"column_start":10,"column_end":30,"is_primary":true,"text":[{"text":"pub type __darwin_mach_port_t = __darwin_mach_port_name_t;","highlight_start":10,"highlight_end":30}],"label":null,"suggested_replacement":"DarwinMachPortT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_mach_port_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:869:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m869\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_mach_port_t = __darwin_mach_port_name_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinMachPortT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_mode_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33640,"byte_end":33655,"line_start":870,"line_end":870,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_mode_t = __uint16_t;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33640,"byte_end":33655,"line_start":870,"line_end":870,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_mode_t = __uint16_t;","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"DarwinModeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_mode_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:870:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m870\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_mode_t = __uint16_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinModeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_off_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33679,"byte_end":33693,"line_start":871,"line_end":871,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_off_t = __int64_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33679,"byte_end":33693,"line_start":871,"line_end":871,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_off_t = __int64_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"DarwinOffT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_off_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:871:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m871\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_off_t = __int64_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinOffT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pid_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33716,"byte_end":33730,"line_start":872,"line_end":872,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_pid_t = __int32_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33716,"byte_end":33730,"line_start":872,"line_end":872,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_pid_t = __int32_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"DarwinPidT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pid_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:872:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m872\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pid_t = __int32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPidT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_sigset_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33753,"byte_end":33770,"line_start":873,"line_end":873,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __darwin_sigset_t = __uint32_t;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33753,"byte_end":33770,"line_start":873,"line_end":873,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __darwin_sigset_t = __uint32_t;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"DarwinSigsetT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_sigset_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:873:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m873\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_sigset_t = __uint32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinSigsetT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_suseconds_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33794,"byte_end":33814,"line_start":874,"line_end":874,"column_start":10,"column_end":30,"is_primary":true,"text":[{"text":"pub type __darwin_suseconds_t = __int32_t;","highlight_start":10,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33794,"byte_end":33814,"line_start":874,"line_end":874,"column_start":10,"column_end":30,"is_primary":true,"text":[{"text":"pub type __darwin_suseconds_t = __int32_t;","highlight_start":10,"highlight_end":30}],"label":null,"suggested_replacement":"DarwinSusecondsT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_suseconds_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:874:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m874\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_suseconds_t = __int32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinSusecondsT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_uid_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33837,"byte_end":33851,"line_start":875,"line_end":875,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_uid_t = __uint32_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33837,"byte_end":33851,"line_start":875,"line_end":875,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type __darwin_uid_t = __uint32_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"DarwinUidT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_uid_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:875:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m875\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_uid_t = __uint32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinUidT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_useconds_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33875,"byte_end":33894,"line_start":876,"line_end":876,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"pub type __darwin_useconds_t = __uint32_t;","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33875,"byte_end":33894,"line_start":876,"line_end":876,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"pub type __darwin_useconds_t = __uint32_t;","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":"DarwinUsecondsT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_useconds_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:876:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m876\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_useconds_t = __uint32_t;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinUsecondsT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_uuid_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33918,"byte_end":33933,"line_start":877,"line_end":877,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33918,"byte_end":33933,"line_start":877,"line_end":877,"column_start":10,"column_end":25,"is_primary":true,"text":[{"text":"pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];","highlight_start":10,"highlight_end":25}],"label":null,"suggested_replacement":"DarwinUuidT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_uuid_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:877:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m877\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinUuidT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_uuid_string_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33981,"byte_end":34003,"line_start":878,"line_end":878,"column_start":10,"column_end":32,"is_primary":true,"text":[{"text":"pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];","highlight_start":10,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":33981,"byte_end":34003,"line_start":878,"line_end":878,"column_start":10,"column_end":32,"is_primary":true,"text":[{"text":"pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];","highlight_start":10,"highlight_end":32}],"label":null,"suggested_replacement":"DarwinUuidStringT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_uuid_string_t` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:878:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m878\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinUuidStringT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_attr_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":41978,"byte_end":42001,"line_start":1049,"line_end":1049,"column_start":10,"column_end":33,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;","highlight_start":10,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":41978,"byte_end":42001,"line_start":1049,"line_end":1049,"column_start":10,"column_end":33,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;","highlight_start":10,"highlight_end":33}],"label":null,"suggested_replacement":"DarwinPthreadAttrT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_attr_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1049:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1049\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadAttrT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_cond_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42037,"byte_end":42060,"line_start":1050,"line_end":1050,"column_start":10,"column_end":33,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;","highlight_start":10,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42037,"byte_end":42060,"line_start":1050,"line_end":1050,"column_start":10,"column_end":33,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;","highlight_start":10,"highlight_end":33}],"label":null,"suggested_replacement":"DarwinPthreadCondT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_cond_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1050:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1050\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadCondT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_condattr_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42096,"byte_end":42123,"line_start":1051,"line_end":1051,"column_start":10,"column_end":37,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;","highlight_start":10,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42096,"byte_end":42123,"line_start":1051,"line_end":1051,"column_start":10,"column_end":37,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;","highlight_start":10,"highlight_end":37}],"label":null,"suggested_replacement":"DarwinPthreadCondattrT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_condattr_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1051:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1051\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadCondattrT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_key_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42163,"byte_end":42185,"line_start":1052,"line_end":1052,"column_start":10,"column_end":32,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;","highlight_start":10,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42163,"byte_end":42185,"line_start":1052,"line_end":1052,"column_start":10,"column_end":32,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;","highlight_start":10,"highlight_end":32}],"label":null,"suggested_replacement":"DarwinPthreadKeyT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_key_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1052:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1052\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadKeyT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_mutex_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42222,"byte_end":42246,"line_start":1053,"line_end":1053,"column_start":10,"column_end":34,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;","highlight_start":10,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42222,"byte_end":42246,"line_start":1053,"line_end":1053,"column_start":10,"column_end":34,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;","highlight_start":10,"highlight_end":34}],"label":null,"suggested_replacement":"DarwinPthreadMutexT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_mutex_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1053:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1053\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadMutexT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_mutexattr_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42283,"byte_end":42311,"line_start":1054,"line_end":1054,"column_start":10,"column_end":38,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;","highlight_start":10,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42283,"byte_end":42311,"line_start":1054,"line_end":1054,"column_start":10,"column_end":38,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;","highlight_start":10,"highlight_end":38}],"label":null,"suggested_replacement":"DarwinPthreadMutexattrT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_mutexattr_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1054:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1054\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadMutexattrT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_once_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42352,"byte_end":42375,"line_start":1055,"line_end":1055,"column_start":10,"column_end":33,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_once_t = _opaque_pthread_once_t;","highlight_start":10,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42352,"byte_end":42375,"line_start":1055,"line_end":1055,"column_start":10,"column_end":33,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_once_t = _opaque_pthread_once_t;","highlight_start":10,"highlight_end":33}],"label":null,"suggested_replacement":"DarwinPthreadOnceT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_once_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1055:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1055\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_once_t = _opaque_pthread_once_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadOnceT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_rwlock_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42411,"byte_end":42436,"line_start":1056,"line_end":1056,"column_start":10,"column_end":35,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;","highlight_start":10,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42411,"byte_end":42436,"line_start":1056,"line_end":1056,"column_start":10,"column_end":35,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;","highlight_start":10,"highlight_end":35}],"label":null,"suggested_replacement":"DarwinPthreadRwlockT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_rwlock_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1056:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1056\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadRwlockT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_rwlockattr_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42474,"byte_end":42503,"line_start":1057,"line_end":1057,"column_start":10,"column_end":39,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;","highlight_start":10,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42474,"byte_end":42503,"line_start":1057,"line_end":1057,"column_start":10,"column_end":39,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;","highlight_start":10,"highlight_end":39}],"label":null,"suggested_replacement":"DarwinPthreadRwlockattrT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_rwlockattr_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1057:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1057\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadRwlockattrT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_pthread_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42545,"byte_end":42563,"line_start":1058,"line_end":1058,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_t = *mut _opaque_pthread_t;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42545,"byte_end":42563,"line_start":1058,"line_end":1058,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_pthread_t = *mut _opaque_pthread_t;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"DarwinPthreadT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_pthread_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1058:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1058\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_pthread_t = *mut _opaque_pthread_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinPthreadT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `intmax_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42599,"byte_end":42607,"line_start":1059,"line_end":1059,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type intmax_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42599,"byte_end":42607,"line_start":1059,"line_end":1059,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type intmax_t = ::std::os::raw::c_long;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"IntmaxT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `intmax_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1059:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1059\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type intmax_t = ::std::os::raw::c_long;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntmaxT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uintmax_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42643,"byte_end":42652,"line_start":1060,"line_end":1060,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type uintmax_t = ::std::os::raw::c_ulong;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42643,"byte_end":42652,"line_start":1060,"line_end":1060,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type uintmax_t = ::std::os::raw::c_ulong;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"UintmaxT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uintmax_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1060:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1060\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uintmax_t = ::std::os::raw::c_ulong;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UintmaxT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_nl_item` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42689,"byte_end":42705,"line_start":1061,"line_end":1061,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_nl_item = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42689,"byte_end":42705,"line_start":1061,"line_end":1061,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type __darwin_nl_item = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":"DarwinNlItem","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_nl_item` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1061:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1061\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_nl_item = ::std::os::raw::c_int;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinNlItem`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_wctrans_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42740,"byte_end":42758,"line_start":1062,"line_end":1062,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_wctrans_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42740,"byte_end":42758,"line_start":1062,"line_end":1062,"column_start":10,"column_end":28,"is_primary":true,"text":[{"text":"pub type __darwin_wctrans_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":28}],"label":null,"suggested_replacement":"DarwinWctransT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_wctrans_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1062:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1062\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_wctrans_t = ::std::os::raw::c_int;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinWctransT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__darwin_wctype_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42793,"byte_end":42810,"line_start":1063,"line_end":1063,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __darwin_wctype_t = __uint32_t;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42793,"byte_end":42810,"line_start":1063,"line_end":1063,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __darwin_wctype_t = __uint32_t;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"DarwinWctypeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__darwin_wctype_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1063:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1063\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __darwin_wctype_t = __uint32_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DarwinWctypeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `idtype_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42955,"byte_end":42963,"line_start":1067,"line_end":1067,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type idtype_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42955,"byte_end":42963,"line_start":1067,"line_end":1067,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type idtype_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"IdtypeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `idtype_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1067:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1067\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type idtype_t = ::std::os::raw::c_uint;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IdtypeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `pid_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42999,"byte_end":43004,"line_start":1068,"line_end":1068,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"pub type pid_t = __darwin_pid_t;","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42999,"byte_end":43004,"line_start":1068,"line_end":1068,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"pub type pid_t = __darwin_pid_t;","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":"PidT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `pid_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1068:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1068\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type pid_t = __darwin_pid_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PidT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `id_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43032,"byte_end":43036,"line_start":1069,"line_end":1069,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"pub type id_t = __darwin_id_t;","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43032,"byte_end":43036,"line_start":1069,"line_end":1069,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"pub type id_t = __darwin_id_t;","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":"IdT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `id_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1069:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1069\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type id_t = __darwin_id_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IdT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `sig_atomic_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43063,"byte_end":43075,"line_start":1070,"line_end":1070,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type sig_atomic_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43063,"byte_end":43075,"line_start":1070,"line_end":1070,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type sig_atomic_t = ::std::os::raw::c_int;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"SigAtomicT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `sig_atomic_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1070:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1070\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type sig_atomic_t = ::std::os::raw::c_int;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SigAtomicT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `u_int8_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43110,"byte_end":43118,"line_start":1071,"line_end":1071,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type u_int8_t = ::std::os::raw::c_uchar;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43110,"byte_end":43118,"line_start":1071,"line_end":1071,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type u_int8_t = ::std::os::raw::c_uchar;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"UInt8T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `u_int8_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1071:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1071\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type u_int8_t = ::std::os::raw::c_uchar;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UInt8T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `u_int16_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43155,"byte_end":43164,"line_start":1072,"line_end":1072,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type u_int16_t = ::std::os::raw::c_ushort;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43155,"byte_end":43164,"line_start":1072,"line_end":1072,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type u_int16_t = ::std::os::raw::c_ushort;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"UInt16T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `u_int16_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1072:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1072\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type u_int16_t = ::std::os::raw::c_ushort;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UInt16T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `u_int32_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43202,"byte_end":43211,"line_start":1073,"line_end":1073,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type u_int32_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43202,"byte_end":43211,"line_start":1073,"line_end":1073,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type u_int32_t = ::std::os::raw::c_uint;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"UInt32T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `u_int32_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1073:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1073\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type u_int32_t = ::std::os::raw::c_uint;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UInt32T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `u_int64_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43247,"byte_end":43256,"line_start":1074,"line_end":1074,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type u_int64_t = ::std::os::raw::c_ulonglong;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43247,"byte_end":43256,"line_start":1074,"line_end":1074,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type u_int64_t = ::std::os::raw::c_ulonglong;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"UInt64T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `u_int64_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1074:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1074\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type u_int64_t = ::std::os::raw::c_ulonglong;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UInt64T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `register_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43297,"byte_end":43307,"line_start":1075,"line_end":1075,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type register_t = i64;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43297,"byte_end":43307,"line_start":1075,"line_end":1075,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type register_t = i64;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"RegisterT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `register_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1075:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1075\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type register_t = i64;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RegisterT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `user_addr_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43324,"byte_end":43335,"line_start":1076,"line_end":1076,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type user_addr_t = u_int64_t;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43324,"byte_end":43335,"line_start":1076,"line_end":1076,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type user_addr_t = u_int64_t;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"UserAddrT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `user_addr_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1076:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1076\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type user_addr_t = u_int64_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UserAddrT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `user_size_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43358,"byte_end":43369,"line_start":1077,"line_end":1077,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type user_size_t = u_int64_t;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43358,"byte_end":43369,"line_start":1077,"line_end":1077,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type user_size_t = u_int64_t;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"UserSizeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `user_size_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1077:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1077\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type user_size_t = u_int64_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UserSizeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `user_ssize_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43392,"byte_end":43404,"line_start":1078,"line_end":1078,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type user_ssize_t = i64;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43392,"byte_end":43404,"line_start":1078,"line_end":1078,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type user_ssize_t = i64;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"UserSsizeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `user_ssize_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1078:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1078\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type user_ssize_t = i64;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UserSsizeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `user_long_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43421,"byte_end":43432,"line_start":1079,"line_end":1079,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type user_long_t = i64;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43421,"byte_end":43432,"line_start":1079,"line_end":1079,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type user_long_t = i64;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"UserLongT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `user_long_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1079:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1079\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type user_long_t = i64;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UserLongT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `user_ulong_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43449,"byte_end":43461,"line_start":1080,"line_end":1080,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type user_ulong_t = u_int64_t;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43449,"byte_end":43461,"line_start":1080,"line_end":1080,"column_start":10,"column_end":22,"is_primary":true,"text":[{"text":"pub type user_ulong_t = u_int64_t;","highlight_start":10,"highlight_end":22}],"label":null,"suggested_replacement":"UserUlongT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `user_ulong_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1080:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1080\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type user_ulong_t = u_int64_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UserUlongT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `user_time_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43484,"byte_end":43495,"line_start":1081,"line_end":1081,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type user_time_t = i64;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43484,"byte_end":43495,"line_start":1081,"line_end":1081,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type user_time_t = i64;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"UserTimeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `user_time_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1081:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1081\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type user_time_t = i64;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UserTimeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `user_off_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43512,"byte_end":43522,"line_start":1082,"line_end":1082,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type user_off_t = i64;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43512,"byte_end":43522,"line_start":1082,"line_end":1082,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type user_off_t = i64;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"UserOffT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `user_off_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1082:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1082\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type user_off_t = i64;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UserOffT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `syscall_arg_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43539,"byte_end":43552,"line_start":1083,"line_end":1083,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type syscall_arg_t = u_int64_t;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":43539,"byte_end":43552,"line_start":1083,"line_end":1083,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type syscall_arg_t = u_int64_t;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"SyscallArgT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `syscall_arg_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1083:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1083\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type syscall_arg_t = u_int64_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SyscallArgT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `mcontext_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":58008,"byte_end":58018,"line_start":1395,"line_end":1395,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type mcontext_t = *mut __darwin_mcontext64;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":58008,"byte_end":58018,"line_start":1395,"line_end":1395,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type mcontext_t = *mut __darwin_mcontext64;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"McontextT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mcontext_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1395:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1395\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type mcontext_t = *mut __darwin_mcontext64;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `McontextT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `pthread_attr_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":58056,"byte_end":58070,"line_start":1396,"line_end":1396,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type pthread_attr_t = __darwin_pthread_attr_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":58056,"byte_end":58070,"line_start":1396,"line_end":1396,"column_start":10,"column_end":24,"is_primary":true,"text":[{"text":"pub type pthread_attr_t = __darwin_pthread_attr_t;","highlight_start":10,"highlight_end":24}],"label":null,"suggested_replacement":"PthreadAttrT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `pthread_attr_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1396:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1396\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type pthread_attr_t = __darwin_pthread_attr_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `PthreadAttrT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `stack_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":58964,"byte_end":58971,"line_start":1415,"line_end":1415,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"pub type stack_t = __darwin_sigaltstack;","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":58964,"byte_end":58971,"line_start":1415,"line_end":1415,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"pub type stack_t = __darwin_sigaltstack;","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":"StackT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `stack_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1415:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1415\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type stack_t = __darwin_sigaltstack;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StackT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `ucontext_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":60355,"byte_end":60365,"line_start":1443,"line_end":1443,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type ucontext_t = __darwin_ucontext;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":60355,"byte_end":60365,"line_start":1443,"line_end":1443,"column_start":10,"column_end":20,"is_primary":true,"text":[{"text":"pub type ucontext_t = __darwin_ucontext;","highlight_start":10,"highlight_end":20}],"label":null,"suggested_replacement":"UcontextT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `ucontext_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1443:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1443\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type ucontext_t = __darwin_ucontext;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UcontextT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `sigset_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":60396,"byte_end":60404,"line_start":1444,"line_end":1444,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type sigset_t = __darwin_sigset_t;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":60396,"byte_end":60404,"line_start":1444,"line_end":1444,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"pub type sigset_t = __darwin_sigset_t;","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"SigsetT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `sigset_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1444:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1444\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type sigset_t = __darwin_sigset_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SigsetT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `uid_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":60435,"byte_end":60440,"line_start":1445,"line_end":1445,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"pub type uid_t = __darwin_uid_t;","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":60435,"byte_end":60440,"line_start":1445,"line_end":1445,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"pub type uid_t = __darwin_uid_t;","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":"UidT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `uid_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1445:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1445\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type uid_t = __darwin_uid_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `UidT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `siginfo_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":63845,"byte_end":63854,"line_start":1513,"line_end":1513,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type siginfo_t = __siginfo;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":63845,"byte_end":63854,"line_start":1513,"line_end":1513,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type siginfo_t = __siginfo;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"SiginfoT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `siginfo_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1513:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1513\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type siginfo_t = __siginfo;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SiginfoT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `sig_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":66633,"byte_end":66638,"line_start":1580,"line_end":1580,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"pub type sig_t = ::std::option::Option<unsafe extern \"C\" fn(arg1: ::std::os::raw::c_int)>;","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":66633,"byte_end":66638,"line_start":1580,"line_end":1580,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"pub type sig_t = ::std::option::Option<unsafe extern \"C\" fn(arg1: ::std::os::raw::c_int)>;","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":"SigT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `sig_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1580:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1580\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type sig_t = ::std::option::Option<unsafe extern \"C\" fn(arg1: ::std::os::raw::c_int)>;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SigT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `rlim_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":68972,"byte_end":68978,"line_start":1634,"line_end":1634,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type rlim_t = __uint64_t;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":68972,"byte_end":68978,"line_start":1634,"line_end":1634,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type rlim_t = __uint64_t;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"RlimT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `rlim_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1634:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type rlim_t = __uint64_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RlimT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `rusage_info_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":71499,"byte_end":71512,"line_start":1677,"line_end":1677,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type rusage_info_t = *mut ::std::os::raw::c_void;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":71499,"byte_end":71512,"line_start":1677,"line_end":1677,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type rusage_info_t = *mut ::std::os::raw::c_void;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"RusageInfoT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `rusage_info_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1677:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1677\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type rusage_info_t = *mut ::std::os::raw::c_void;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RusageInfoT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `rusage_info_current` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":108570,"byte_end":108589,"line_start":2332,"line_end":2332,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"pub type rusage_info_current = rusage_info_v6;","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":108570,"byte_end":108589,"line_start":2332,"line_end":2332,"column_start":10,"column_end":29,"is_primary":true,"text":[{"text":"pub type rusage_info_current = rusage_info_v6;","highlight_start":10,"highlight_end":29}],"label":null,"suggested_replacement":"RusageInfoCurrent","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `rusage_info_current` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2332:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2332\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type rusage_info_current = rusage_info_v6;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RusageInfoCurrent`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `ct_rune_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":123099,"byte_end":123108,"line_start":2752,"line_end":2752,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type ct_rune_t = __darwin_ct_rune_t;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":123099,"byte_end":123108,"line_start":2752,"line_end":2752,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type ct_rune_t = __darwin_ct_rune_t;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"CtRuneT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `ct_rune_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2752:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2752\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type ct_rune_t = __darwin_ct_rune_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CtRuneT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `rune_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":123140,"byte_end":123146,"line_start":2753,"line_end":2753,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type rune_t = __darwin_rune_t;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":123140,"byte_end":123146,"line_start":2753,"line_end":2753,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type rune_t = __darwin_rune_t;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"RuneT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `rune_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2753:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2753\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type rune_t = __darwin_rune_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `RuneT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `wchar_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":123175,"byte_end":123182,"line_start":2754,"line_end":2754,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"pub type wchar_t = __darwin_wchar_t;","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":123175,"byte_end":123182,"line_start":2754,"line_end":2754,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"pub type wchar_t = __darwin_wchar_t;","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":"WcharT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `wchar_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2754:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2754\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type wchar_t = __darwin_wchar_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `WcharT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `malloc_type_id_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":124876,"byte_end":124892,"line_start":2797,"line_end":2797,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type malloc_type_id_t = ::std::os::raw::c_ulonglong;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":124876,"byte_end":124892,"line_start":2797,"line_end":2797,"column_start":10,"column_end":26,"is_primary":true,"text":[{"text":"pub type malloc_type_id_t = ::std::os::raw::c_ulonglong;","highlight_start":10,"highlight_end":26}],"label":null,"suggested_replacement":"MallocTypeIdT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `malloc_type_id_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2797:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2797\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type malloc_type_id_t = ::std::os::raw::c_ulonglong;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MallocTypeIdT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `malloc_zone_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":126196,"byte_end":126209,"line_start":2847,"line_end":2847,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type malloc_zone_t = _malloc_zone_t;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":126196,"byte_end":126209,"line_start":2847,"line_end":2847,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type malloc_zone_t = _malloc_zone_t;","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"MallocZoneT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `malloc_zone_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2847:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2847\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type malloc_zone_t = _malloc_zone_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `MallocZoneT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `dev_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":137016,"byte_end":137021,"line_start":3217,"line_end":3217,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"pub type dev_t = __darwin_dev_t;","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":137016,"byte_end":137021,"line_start":3217,"line_end":3217,"column_start":10,"column_end":15,"is_primary":true,"text":[{"text":"pub type dev_t = __darwin_dev_t;","highlight_start":10,"highlight_end":15}],"label":null,"suggested_replacement":"DevT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `dev_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3217:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type dev_t = __darwin_dev_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `DevT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `mode_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":137049,"byte_end":137055,"line_start":3218,"line_end":3218,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type mode_t = __darwin_mode_t;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":137049,"byte_end":137055,"line_start":3218,"line_end":3218,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type mode_t = __darwin_mode_t;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"ModeT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `mode_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3218:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type mode_t = __darwin_mode_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ModeT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `cmem_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":145446,"byte_end":145452,"line_start":3501,"line_end":3501,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type cmem_t = tag_cmem_t;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":145446,"byte_end":145452,"line_start":3501,"line_end":3501,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type cmem_t = tag_cmem_t;","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"CmemT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `cmem_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3501:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3501\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type cmem_t = tag_cmem_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CmemT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `cmems_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":146180,"byte_end":146187,"line_start":3517,"line_end":3517,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"pub type cmems_t = tag_cmems_t;","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":146180,"byte_end":146187,"line_start":3517,"line_end":3517,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"pub type cmems_t = tag_cmems_t;","highlight_start":10,"highlight_end":17}],"label":null,"suggested_replacement":"CmemsT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `cmems_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3517:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3517\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type cmems_t = tag_cmems_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CmemsT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `cmembig_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":146798,"byte_end":146807,"line_start":3533,"line_end":3533,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type cmembig_t = tag_cmem_big_t;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":146798,"byte_end":146807,"line_start":3533,"line_end":3533,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type cmembig_t = tag_cmem_big_t;","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"CmembigT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `cmembig_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3533:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type cmembig_t = tag_cmem_big_t;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `CmembigT`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `send_f` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":146835,"byte_end":146841,"line_start":3534,"line_end":3534,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type send_f = ::std::option::Option<","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":146835,"byte_end":146841,"line_start":3534,"line_end":3534,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"pub type send_f = ::std::option::Option<","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":"SendF","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `send_f` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3534:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3534\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type send_f = ::std::option::Option<\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `SendF`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `receive_f` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":147099,"byte_end":147108,"line_start":3542,"line_end":3542,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type receive_f = ::std::option::Option<","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":147099,"byte_end":147108,"line_start":3542,"line_end":3542,"column_start":10,"column_end":19,"is_primary":true,"text":[{"text":"pub type receive_f = ::std::option::Option<","highlight_start":10,"highlight_end":19}],"label":null,"suggested_replacement":"ReceiveF","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `receive_f` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3542:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3542\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type receive_f = ::std::option::Option<\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ReceiveF`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `receive_all_f` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":147376,"byte_end":147389,"line_start":3550,"line_end":3550,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type receive_all_f = ::std::option::Option<","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":147376,"byte_end":147389,"line_start":3550,"line_end":3550,"column_start":10,"column_end":23,"is_primary":true,"text":[{"text":"pub type receive_all_f = ::std::option::Option<","highlight_start":10,"highlight_end":23}],"label":null,"suggested_replacement":"ReceiveAllF","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `receive_all_f` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3550:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3550\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type receive_all_f = ::std::option::Option<\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ReceiveAllF`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__builtin_va_list` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":152614,"byte_end":152631,"line_start":3700,"line_end":3700,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __builtin_va_list = *mut ::std::os::raw::c_char;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":152614,"byte_end":152631,"line_start":3700,"line_end":3700,"column_start":10,"column_end":27,"is_primary":true,"text":[{"text":"pub type __builtin_va_list = *mut ::std::os::raw::c_char;","highlight_start":10,"highlight_end":27}],"label":null,"suggested_replacement":"BuiltinVaList","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__builtin_va_list` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3700:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3700\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __builtin_va_list = *mut ::std::os::raw::c_char;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `BuiltinVaList`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `__uint128_t` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":152672,"byte_end":152683,"line_start":3701,"line_end":3701,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type __uint128_t = u128;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":152672,"byte_end":152683,"line_start":3701,"line_end":3701,"column_start":10,"column_end":21,"is_primary":true,"text":[{"text":"pub type __uint128_t = u128;","highlight_start":10,"highlight_end":21}],"label":null,"suggested_replacement":"Uint128T","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `__uint128_t` should have an upper camel case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:3701:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3701\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type __uint128_t = u128;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Uint128T`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `lazy_static::lazy_static`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"network/src/network.rs","byte_start":153,"byte_end":177,"line_start":7,"line_end":7,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use lazy_static::lazy_static;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"network/src/network.rs","byte_start":149,"byte_end":179,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use lazy_static::lazy_static;","highlight_start":1,"highlight_end":30},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `lazy_static::lazy_static`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetwork/src/network.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse lazy_static::lazy_static;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"function `get_dt_impl` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"network/src/network.rs","byte_start":910,"byte_end":921,"line_start":28,"line_end":28,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn get_dt_impl(ptr: *mut c_void) -> Arc<dyn IDataTransport + Send + Sync> {","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: function `get_dt_impl` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetwork/src/network.rs:28:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn get_dt_impl(ptr: *mut c_void) -> Arc<dyn IDataTransport + Send + Sync> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `__has_safe_buffers` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":5031,"byte_end":5049,"line_start":141,"line_end":141,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const __has_safe_buffers: u32 = 1;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":5031,"byte_end":5049,"line_start":141,"line_end":141,"column_start":11,"column_end":29,"is_primary":true,"text":[{"text":"pub const __has_safe_buffers: u32 = 1;","highlight_start":11,"highlight_end":29}],"label":null,"suggested_replacement":"__HAS_SAFE_BUFFERS","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `__has_safe_buffers` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:141:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const __has_safe_buffers: u32 = 1;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `__HAS_SAFE_BUFFERS`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `__has_ptrcheck` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":5907,"byte_end":5921,"line_start":160,"line_end":160,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const __has_ptrcheck: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":5907,"byte_end":5921,"line_start":160,"line_end":160,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const __has_ptrcheck: u32 = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"__HAS_PTRCHECK","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `__has_ptrcheck` should have an upper case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:160:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const __has_ptrcheck: u32 = 0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `__HAS_PTRCHECK`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `_mbstateL` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32075,"byte_end":32084,"line_start":837,"line_end":837,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    pub _mbstateL: ::std::os::raw::c_longlong,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":32075,"byte_end":32084,"line_start":837,"line_end":837,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    pub _mbstateL: ::std::os::raw::c_longlong,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"_mbstate_l","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `_mbstateL` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:837:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m837\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub _mbstateL: ::std::os::raw::c_longlong,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `_mbstate_l`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `idtype_t_P_ALL` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42835,"byte_end":42849,"line_start":1064,"line_end":1064,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const idtype_t_P_ALL: idtype_t = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42835,"byte_end":42849,"line_start":1064,"line_end":1064,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const idtype_t_P_ALL: idtype_t = 0;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"IDTYPE_T_P_ALL","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `idtype_t_P_ALL` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1064:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1064\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const idtype_t_P_ALL: idtype_t = 0;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `IDTYPE_T_P_ALL`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `idtype_t_P_PID` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42875,"byte_end":42889,"line_start":1065,"line_end":1065,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const idtype_t_P_PID: idtype_t = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42875,"byte_end":42889,"line_start":1065,"line_end":1065,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"pub const idtype_t_P_PID: idtype_t = 1;","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":"IDTYPE_T_P_PID","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `idtype_t_P_PID` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1065:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1065\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const idtype_t_P_PID: idtype_t = 1;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `IDTYPE_T_P_PID`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"constant `idtype_t_P_PGID` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42915,"byte_end":42930,"line_start":1066,"line_end":1066,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const idtype_t_P_PGID: idtype_t = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":42915,"byte_end":42930,"line_start":1066,"line_end":1066,"column_start":11,"column_end":26,"is_primary":true,"text":[{"text":"pub const idtype_t_P_PGID: idtype_t = 2;","highlight_start":11,"highlight_end":26}],"label":null,"suggested_replacement":"IDTYPE_T_P_PGID","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `idtype_t_P_PGID` should have an upper case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:1066:11\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1066\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub const idtype_t_P_PGID: idtype_t = 2;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `IDTYPE_T_P_PGID`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `w_T` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":110969,"byte_end":110972,"line_start":2399,"line_end":2399,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    pub w_T: wait__bindgen_ty_1,","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":110969,"byte_end":110972,"line_start":2399,"line_end":2399,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    pub w_T: wait__bindgen_ty_1,","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"w_t","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `w_T` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2399:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2399\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub w_T: wait__bindgen_ty_1,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_t`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `w_S` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":111002,"byte_end":111005,"line_start":2400,"line_end":2400,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    pub w_S: wait__bindgen_ty_2,","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":111002,"byte_end":111005,"line_start":2400,"line_end":2400,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    pub w_S: wait__bindgen_ty_2,","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"w_s","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `w_S` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2400:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2400\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub w_S: wait__bindgen_ty_2,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_s`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Termsig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":111534,"byte_end":111543,"line_start":2416,"line_end":2416,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn w_Termsig(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":111534,"byte_end":111543,"line_start":2416,"line_end":2416,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn w_Termsig(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"w_termsig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Termsig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2416:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2416\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn w_Termsig(&self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_termsig`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Termsig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":111693,"byte_end":111706,"line_start":2420,"line_end":2420,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_w_Termsig(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":111693,"byte_end":111706,"line_start":2420,"line_end":2420,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_w_Termsig(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"set_w_termsig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Termsig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2420:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_w_Termsig(&mut self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `set_w_termsig`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Termsig_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":111927,"byte_end":111940,"line_start":2427,"line_end":2427,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Termsig_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":111927,"byte_end":111940,"line_start":2427,"line_end":2427,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Termsig_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":"w_termsig_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Termsig_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2427:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn w_Termsig_raw(this: *const Self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_termsig_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Termsig_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":112261,"byte_end":112278,"line_start":2437,"line_end":2437,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Termsig_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":112261,"byte_end":112278,"line_start":2437,"line_end":2437,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Termsig_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":"set_w_termsig_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Termsig_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2437:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2437\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn set_w_Termsig_raw(this: *mut Self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `set_w_termsig_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Coredump` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":112650,"byte_end":112660,"line_start":2449,"line_end":2449,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn w_Coredump(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":112650,"byte_end":112660,"line_start":2449,"line_end":2449,"column_start":12,"column_end":22,"is_primary":true,"text":[{"text":"    pub fn w_Coredump(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":22}],"label":null,"suggested_replacement":"w_coredump","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Coredump` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2449:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2449\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn w_Coredump(&self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_coredump`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Coredump` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":112810,"byte_end":112824,"line_start":2453,"line_end":2453,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn set_w_Coredump(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":112810,"byte_end":112824,"line_start":2453,"line_end":2453,"column_start":12,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn set_w_Coredump(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":26}],"label":null,"suggested_replacement":"set_w_coredump","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Coredump` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2453:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2453\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_w_Coredump(&mut self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_coredump`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Coredump_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":113045,"byte_end":113059,"line_start":2460,"line_end":2460,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Coredump_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":113045,"byte_end":113059,"line_start":2460,"line_end":2460,"column_start":19,"column_end":33,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Coredump_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":33}],"label":null,"suggested_replacement":"w_coredump_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Coredump_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2460:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn w_Coredump_raw(this: *const Self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_coredump_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Coredump_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":113380,"byte_end":113398,"line_start":2470,"line_end":2470,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Coredump_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":113380,"byte_end":113398,"line_start":2470,"line_end":2470,"column_start":19,"column_end":37,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Coredump_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":37}],"label":null,"suggested_replacement":"set_w_coredump_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Coredump_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2470:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2470\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn set_w_Coredump_raw(this: *mut Self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_coredump_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Retcode` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":113770,"byte_end":113779,"line_start":2482,"line_end":2482,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn w_Retcode(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":113770,"byte_end":113779,"line_start":2482,"line_end":2482,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn w_Retcode(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"w_retcode","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Retcode` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2482:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2482\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn w_Retcode(&self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_retcode`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Retcode` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":113929,"byte_end":113942,"line_start":2486,"line_end":2486,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_w_Retcode(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":113929,"byte_end":113942,"line_start":2486,"line_end":2486,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_w_Retcode(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"set_w_retcode","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Retcode` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2486:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2486\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_w_Retcode(&mut self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `set_w_retcode`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Retcode_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":114163,"byte_end":114176,"line_start":2493,"line_end":2493,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Retcode_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":114163,"byte_end":114176,"line_start":2493,"line_end":2493,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Retcode_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":"w_retcode_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Retcode_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2493:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2493\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn w_Retcode_raw(this: *const Self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_retcode_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Retcode_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":114497,"byte_end":114514,"line_start":2503,"line_end":2503,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Retcode_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":114497,"byte_end":114514,"line_start":2503,"line_end":2503,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Retcode_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":"set_w_retcode_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Retcode_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2503:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2503\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn set_w_Retcode_raw(this: *mut Self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `set_w_retcode_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Filler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":114886,"byte_end":114894,"line_start":2515,"line_end":2515,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn w_Filler(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":114886,"byte_end":114894,"line_start":2515,"line_end":2515,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn w_Filler(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"w_filler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Filler` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2515:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2515\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn w_Filler(&self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_filler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Filler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":115046,"byte_end":115058,"line_start":2519,"line_end":2519,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn set_w_Filler(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":115046,"byte_end":115058,"line_start":2519,"line_end":2519,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn set_w_Filler(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"set_w_filler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Filler` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2519:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2519\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_w_Filler(&mut self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_filler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Filler_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":115281,"byte_end":115293,"line_start":2526,"line_end":2526,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Filler_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":115281,"byte_end":115293,"line_start":2526,"line_end":2526,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Filler_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":31}],"label":null,"suggested_replacement":"w_filler_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Filler_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2526:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2526\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn w_Filler_raw(this: *const Self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_filler_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Filler_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":115616,"byte_end":115632,"line_start":2536,"line_end":2536,"column_start":19,"column_end":35,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Filler_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":115616,"byte_end":115632,"line_start":2536,"line_end":2536,"column_start":19,"column_end":35,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Filler_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":35}],"label":null,"suggested_replacement":"set_w_filler_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Filler_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2536:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2536\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn set_w_Filler_raw(this: *mut Self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_filler_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Termsig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116030,"byte_end":116039,"line_start":2549,"line_end":2549,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        w_Termsig: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116030,"byte_end":116039,"line_start":2549,"line_end":2549,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        w_Termsig: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"w_termsig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Termsig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2549:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2549\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        w_Termsig: ::std::os::raw::c_uint,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_termsig`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Coredump` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116073,"byte_end":116083,"line_start":2550,"line_end":2550,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        w_Coredump: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116073,"byte_end":116083,"line_start":2550,"line_end":2550,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        w_Coredump: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"w_coredump","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Coredump` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2550:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2550\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        w_Coredump: ::std::os::raw::c_uint,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_coredump`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Retcode` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116117,"byte_end":116126,"line_start":2551,"line_end":2551,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        w_Retcode: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116117,"byte_end":116126,"line_start":2551,"line_end":2551,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        w_Retcode: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"w_retcode","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Retcode` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2551:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2551\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        w_Retcode: ::std::os::raw::c_uint,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_retcode`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Filler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116160,"byte_end":116168,"line_start":2552,"line_end":2552,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        w_Filler: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116160,"byte_end":116168,"line_start":2552,"line_end":2552,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        w_Filler: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"w_filler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Filler` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2552:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2552\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        w_Filler: ::std::os::raw::c_uint,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_filler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Termsig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116407,"byte_end":116416,"line_start":2556,"line_end":2556,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let w_Termsig: u32 = unsafe { ::std::mem::transmute(w_Termsig) };","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116407,"byte_end":116416,"line_start":2556,"line_end":2556,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let w_Termsig: u32 = unsafe { ::std::mem::transmute(w_Termsig) };","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"w_termsig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Termsig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2556:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let w_Termsig: u32 = unsafe { ::std::mem::transmute(w_Termsig) };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_termsig`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Coredump` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116577,"byte_end":116587,"line_start":2560,"line_end":2560,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"            let w_Coredump: u32 = unsafe { ::std::mem::transmute(w_Coredump) };","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116577,"byte_end":116587,"line_start":2560,"line_end":2560,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"            let w_Coredump: u32 = unsafe { ::std::mem::transmute(w_Coredump) };","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":"w_coredump","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Coredump` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2560:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2560\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let w_Coredump: u32 = unsafe { ::std::mem::transmute(w_Coredump) };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_coredump`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Retcode` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116750,"byte_end":116759,"line_start":2564,"line_end":2564,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let w_Retcode: u32 = unsafe { ::std::mem::transmute(w_Retcode) };","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116750,"byte_end":116759,"line_start":2564,"line_end":2564,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let w_Retcode: u32 = unsafe { ::std::mem::transmute(w_Retcode) };","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"w_retcode","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Retcode` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2564:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2564\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let w_Retcode: u32 = unsafe { ::std::mem::transmute(w_Retcode) };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `w_retcode`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Filler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116922,"byte_end":116930,"line_start":2568,"line_end":2568,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"            let w_Filler: u32 = unsafe { ::std::mem::transmute(w_Filler) };","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":116922,"byte_end":116930,"line_start":2568,"line_end":2568,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"            let w_Filler: u32 = unsafe { ::std::mem::transmute(w_Filler) };","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"w_filler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Filler` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2568:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2568\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let w_Filler: u32 = unsafe { ::std::mem::transmute(w_Filler) };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_filler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Stopval` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":117567,"byte_end":117576,"line_start":2588,"line_end":2588,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn w_Stopval(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":117567,"byte_end":117576,"line_start":2588,"line_end":2588,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn w_Stopval(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"w_stopval","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Stopval` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2588:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2588\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn w_Stopval(&self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_stopval`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Stopval` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":117726,"byte_end":117739,"line_start":2592,"line_end":2592,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_w_Stopval(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":117726,"byte_end":117739,"line_start":2592,"line_end":2592,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_w_Stopval(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"set_w_stopval","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Stopval` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2592:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2592\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_w_Stopval(&mut self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_stopval`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Stopval_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":117960,"byte_end":117973,"line_start":2599,"line_end":2599,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Stopval_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":117960,"byte_end":117973,"line_start":2599,"line_end":2599,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Stopval_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":"w_stopval_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Stopval_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2599:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2599\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn w_Stopval_raw(this: *const Self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_stopval_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Stopval_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":118294,"byte_end":118311,"line_start":2609,"line_end":2609,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Stopval_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":118294,"byte_end":118311,"line_start":2609,"line_end":2609,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Stopval_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":"set_w_stopval_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Stopval_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2609:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2609\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn set_w_Stopval_raw(this: *mut Self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_stopval_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Stopsig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":118683,"byte_end":118692,"line_start":2621,"line_end":2621,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn w_Stopsig(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":118683,"byte_end":118692,"line_start":2621,"line_end":2621,"column_start":12,"column_end":21,"is_primary":true,"text":[{"text":"    pub fn w_Stopsig(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":21}],"label":null,"suggested_replacement":"w_stopsig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Stopsig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2621:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2621\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn w_Stopsig(&self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_stopsig`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Stopsig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":118842,"byte_end":118855,"line_start":2625,"line_end":2625,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_w_Stopsig(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":118842,"byte_end":118855,"line_start":2625,"line_end":2625,"column_start":12,"column_end":25,"is_primary":true,"text":[{"text":"    pub fn set_w_Stopsig(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":25}],"label":null,"suggested_replacement":"set_w_stopsig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Stopsig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2625:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2625\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_w_Stopsig(&mut self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_stopsig`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Stopsig_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":119076,"byte_end":119089,"line_start":2632,"line_end":2632,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Stopsig_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":119076,"byte_end":119089,"line_start":2632,"line_end":2632,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Stopsig_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":"w_stopsig_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Stopsig_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2632:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn w_Stopsig_raw(this: *const Self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_stopsig_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Stopsig_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":119410,"byte_end":119427,"line_start":2642,"line_end":2642,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Stopsig_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":119410,"byte_end":119427,"line_start":2642,"line_end":2642,"column_start":19,"column_end":36,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Stopsig_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":36}],"label":null,"suggested_replacement":"set_w_stopsig_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Stopsig_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2642:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2642\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn set_w_Stopsig_raw(this: *mut Self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_stopsig_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Filler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":119799,"byte_end":119807,"line_start":2654,"line_end":2654,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn w_Filler(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":119799,"byte_end":119807,"line_start":2654,"line_end":2654,"column_start":12,"column_end":20,"is_primary":true,"text":[{"text":"    pub fn w_Filler(&self) -> ::std::os::raw::c_uint {","highlight_start":12,"highlight_end":20}],"label":null,"suggested_replacement":"w_filler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Filler` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2654:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2654\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn w_Filler(&self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_filler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Filler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":119959,"byte_end":119971,"line_start":2658,"line_end":2658,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn set_w_Filler(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":119959,"byte_end":119971,"line_start":2658,"line_end":2658,"column_start":12,"column_end":24,"is_primary":true,"text":[{"text":"    pub fn set_w_Filler(&mut self, val: ::std::os::raw::c_uint) {","highlight_start":12,"highlight_end":24}],"label":null,"suggested_replacement":"set_w_filler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Filler` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2658:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2658\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn set_w_Filler(&mut self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_filler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `w_Filler_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":120194,"byte_end":120206,"line_start":2665,"line_end":2665,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Filler_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":120194,"byte_end":120206,"line_start":2665,"line_end":2665,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"    pub unsafe fn w_Filler_raw(this: *const Self) -> ::std::os::raw::c_uint {","highlight_start":19,"highlight_end":31}],"label":null,"suggested_replacement":"w_filler_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `w_Filler_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2665:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2665\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn w_Filler_raw(this: *const Self) -> ::std::os::raw::c_uint {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_filler_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `set_w_Filler_raw` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":120529,"byte_end":120545,"line_start":2675,"line_end":2675,"column_start":19,"column_end":35,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Filler_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":120529,"byte_end":120545,"line_start":2675,"line_end":2675,"column_start":19,"column_end":35,"is_primary":true,"text":[{"text":"    pub unsafe fn set_w_Filler_raw(this: *mut Self, val: ::std::os::raw::c_uint) {","highlight_start":19,"highlight_end":35}],"label":null,"suggested_replacement":"set_w_filler_raw","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `set_w_Filler_raw` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2675:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2675\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub unsafe fn set_w_Filler_raw(this: *mut Self, val: ::std::os::raw::c_uint) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `set_w_filler_raw`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Stopval` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":120943,"byte_end":120952,"line_start":2688,"line_end":2688,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        w_Stopval: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":120943,"byte_end":120952,"line_start":2688,"line_end":2688,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        w_Stopval: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"w_stopval","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Stopval` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2688:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2688\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        w_Stopval: ::std::os::raw::c_uint,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_stopval`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Stopsig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":120986,"byte_end":120995,"line_start":2689,"line_end":2689,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        w_Stopsig: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":120986,"byte_end":120995,"line_start":2689,"line_end":2689,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        w_Stopsig: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"w_stopsig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Stopsig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2689:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2689\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        w_Stopsig: ::std::os::raw::c_uint,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_stopsig`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Filler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":121029,"byte_end":121037,"line_start":2690,"line_end":2690,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        w_Filler: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":121029,"byte_end":121037,"line_start":2690,"line_end":2690,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        w_Filler: ::std::os::raw::c_uint,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"w_filler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Filler` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2690:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2690\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        w_Filler: ::std::os::raw::c_uint,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_filler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Stopval` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":121276,"byte_end":121285,"line_start":2694,"line_end":2694,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let w_Stopval: u32 = unsafe { ::std::mem::transmute(w_Stopval) };","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":121276,"byte_end":121285,"line_start":2694,"line_end":2694,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let w_Stopval: u32 = unsafe { ::std::mem::transmute(w_Stopval) };","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"w_stopval","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Stopval` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2694:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2694\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let w_Stopval: u32 = unsafe { ::std::mem::transmute(w_Stopval) };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_stopval`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Stopsig` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":121446,"byte_end":121455,"line_start":2698,"line_end":2698,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let w_Stopsig: u32 = unsafe { ::std::mem::transmute(w_Stopsig) };","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":121446,"byte_end":121455,"line_start":2698,"line_end":2698,"column_start":17,"column_end":26,"is_primary":true,"text":[{"text":"            let w_Stopsig: u32 = unsafe { ::std::mem::transmute(w_Stopsig) };","highlight_start":17,"highlight_end":26}],"label":null,"suggested_replacement":"w_stopsig","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Stopsig` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2698:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let w_Stopsig: u32 = unsafe { ::std::mem::transmute(w_Stopsig) };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_stopsig`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `w_Filler` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":121618,"byte_end":121626,"line_start":2702,"line_end":2702,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"            let w_Filler: u32 = unsafe { ::std::mem::transmute(w_Filler) };","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs","byte_start":121618,"byte_end":121626,"line_start":2702,"line_end":2702,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"            let w_Filler: u32 = unsafe { ::std::mem::transmute(w_Filler) };","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"w_filler","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `w_Filler` should have a snake case name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/build/network-66f7bcd0e8b87178/out/bindings.rs:2702:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2702\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let w_Filler: u32 = unsafe { ::std::mem::transmute(w_Filler) };\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case (notice the capitalization): `w_filler`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused return value of `Box::<T>::from_raw` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"network/src/network.rs","byte_start":1166,"byte_end":1184,"line_start":34,"line_end":34,"column_start":14,"column_end":32,"is_primary":true,"text":[{"text":"    unsafe { Box::from_raw(ptr); }","highlight_start":14,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"call `drop(Box::from_raw(ptr))` if you intend to drop the `Box`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_must_use)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use `let _ = ...` to ignore the resulting value","code":null,"level":"help","spans":[{"file_name":"network/src/network.rs","byte_start":1166,"byte_end":1166,"line_start":34,"line_end":34,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"    unsafe { Box::from_raw(ptr); }","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"let _ = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused return value of `Box::<T>::from_raw` that must be used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mnetwork/src/network.rs:34:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    unsafe { Box::from_raw(ptr); }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: call `drop(Box::from_raw(ptr))` if you intend to drop the `Box`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_must_use)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `let _ = ...` to ignore the resulting value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    unsafe { \u001b[0m\u001b[0m\u001b[38;5;10mlet _ = \u001b[0m\u001b[0mBox::from_raw(ptr); }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[38;5;10m+++++++\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"linking with `cc` failed: exit status: 1","code":null,"level":"error","spans":[],"children":[{"message":"env -u IPHONEOS_DEPLOYMENT_TARGET -u TVOS_DEPLOYMENT_TARGET -u XROS_DEPLOYMENT_TARGET LC_ALL=\"C\" PATH=\"/Users/ghostcorn/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/aarch64-apple-darwin/bin:/opt/homebrew/opt/postgresql@15/bin:/opt/homebrew/opt/postgresql@15/bin:/Users/ghostcorn/dev/google-cloud-sdk/bin:/Users/ghostcorn/.wasmtime/bin:/Users/ghostcorn/.bun/bin:/opt/homebrew/opt/openjdk@17/bin:/opt/homebrew/opt/coreutils/libexec/gnubin:/Users/ghostcorn/Library/pnpm:/opt/homebrew/opt/llvm/bin:/opt/homebrew/opt/ruby/bin:/opt/homebrew/opt/ruby/bin:/Users/ghostcorn/.local/share/solana/install/active_release/bin:/Users/ghostcorn/.nvm/versions/node/v22.13.0/bin:/Users/ghostcorn/ndk/toolchains/llvm/prebuild/darwin-x86_64/x86_64-linux-android/bin:/Users/ghostcorn/ndk/toolchains/llvm/prebuild/darwin-x86_64/i686-linux-android/bin:/Users/ghostcorn/ndk/toolchains/llvm/prebuild/darwin-x86_64/arm-linux-androideabi/bin:/Users/ghostcorn/ndk/toolchains/llvm/prebuild/darwin-x86_64/aarch64-linux-android/bin:/Users/ghostcorn/.local/share/solana/install/active_release/bin:/opt/local/bin:/opt/local/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Users/ghostcorn/Library/Application Support/org.dfinity.dfx/bin:/Users/ghostcorn/.wasmedge/bin:/Users/ghostcorn/.cargo/bin:/Users/ghostcorn/.local/bin:/Users/ghostcorn/ndk/:/Users/ghostcorn/bin/:/Users/ghostcorn/.local/share/solana/install/active_release/bin:/opt/local/bin:/opt/local/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Users/ghostcorn/Library/Application Support/org.dfinity.dfx/bin:/Users/ghostcorn/.wasmedge/bin:/Users/ghostcorn/.cargo/bin:/Users/ghostcorn/.local/bin:/Users/ghostcorn/ndk/:/Users/ghostcorn/bin/vessel:/Users/ghostcorn/.pub-cache/bin:/Users/ghostcorn/flutter/bin:/Usrs/ghostcorn/bin/didc:/Usrs/ghostcorn/bin/keysmith:/Usrs/ghostcorn/bin/vessel:/Users/ghostcorn/.foundry/bin:/Users/ghostcorn/.local/bin\" VSLANG=\"1033\" ZERO_AR_DATE=\"1\" \"cc\" \"/var/folders/0n/mlts398n6mb3hnzp_q2qsc500000gn/T/rustcH5XQ1x/symbols.o\" \"<7 object files omitted>\" \"-lcbmpc\" \"/Users/ghostcorn/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/aarch64-apple-darwin/lib/{libtest-989b59f3ae868582.rlib,libgetopts-968e2fece17d5cc4.rlib,libunicode_width-6ef477fc06856018.rlib,librustc_std_workspace_std-cae074631de478c1.rlib}\" \"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/deps/{libctor-3f718782c6fae503.rlib,libdtor-c0271cfd92771737.rlib,liblazy_static-9ab7f936be8036bd.rlib}\" \"/Users/ghostcorn/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/aarch64-apple-darwin/lib/{libstd-573e32497760bf1c.rlib,libpanic_unwind-76f300e03298d99d.rlib,libobject-78250f23c296a1f2.rlib,libmemchr-5083cf18215ea8ee.rlib,libaddr2line-ca30e0d5b6ed0ca3.rlib,libgimli-6b189ce743901ee8.rlib,librustc_demangle-fed4439cf637b585.rlib,libstd_detect-66a31607514d511b.rlib,libhashbrown-9f79784ab8533571.rlib,librustc_std_workspace_alloc-3bbc4a7842f09bbe.rlib,libminiz_oxide-3576048c4c7a6e54.rlib,libadler-29792a92db1ba745.rlib,libunwind-6947a6fbf31f2397.rlib,libcfg_if-bfdaa410fc937ed8.rlib,liblibc-3de8c0f35115a8fb.rlib,liballoc-862067b835f8cbc0.rlib,librustc_std_workspace_core-38ff204e4bd0bb02.rlib,libcore-6a16c20c3dff7df3.rlib,libcompiler_builtins-127b2e95f1a1ab85.rlib}\" \"-lSystem\" \"-lc\" \"-lm\" \"-arch\" \"arm64\" \"-mmacosx-version-min=11.0.0\" \"-L\" \"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/network/../../lib/Release\" \"-o\" \"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/deps/network-ff71f61decbb5b04\" \"-Wl,-dead_strip\" \"-nodefaultlibs\"","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"some arguments are omitted. use `--verbose` to show all linker arguments","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"Undefined symbols for architecture arm64:\n  \"_callback_receive\", referenced from:\n      network::network::init_callbacks::hda46d8f11e0d8e11 in network-ff71f61decbb5b04.1xnccxkrx831omoqdyqlx6upn.rcgu.o\n  \"_callback_receive_all\", referenced from:\n      network::network::init_callbacks::hda46d8f11e0d8e11 in network-ff71f61decbb5b04.1xnccxkrx831omoqdyqlx6upn.rcgu.o\n  \"_callback_send\", referenced from:\n      network::network::init_callbacks::hda46d8f11e0d8e11 in network-ff71f61decbb5b04.1xnccxkrx831omoqdyqlx6upn.rcgu.o\n  \"_set_callbacks_wrapper\", referenced from:\n      network::network::init_callbacks::hda46d8f11e0d8e11 in network-ff71f61decbb5b04.1xnccxkrx831omoqdyqlx6upn.rcgu.o\nld: symbol(s) not found for architecture arm64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: linking with `cc` failed: exit status: 1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: env -u IPHONEOS_DEPLOYMENT_TARGET -u TVOS_DEPLOYMENT_TARGET -u XROS_DEPLOYMENT_TARGET LC_ALL=\"C\" PATH=\"/Users/ghostcorn/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/aarch64-apple-darwin/bin:/opt/homebrew/opt/postgresql@15/bin:/opt/homebrew/opt/postgresql@15/bin:/Users/ghostcorn/dev/google-cloud-sdk/bin:/Users/ghostcorn/.wasmtime/bin:/Users/ghostcorn/.bun/bin:/opt/homebrew/opt/openjdk@17/bin:/opt/homebrew/opt/coreutils/libexec/gnubin:/Users/ghostcorn/Library/pnpm:/opt/homebrew/opt/llvm/bin:/opt/homebrew/opt/ruby/bin:/opt/homebrew/opt/ruby/bin:/Users/ghostcorn/.local/share/solana/install/active_release/bin:/Users/ghostcorn/.nvm/versions/node/v22.13.0/bin:/Users/ghostcorn/ndk/toolchains/llvm/prebuild/darwin-x86_64/x86_64-linux-android/bin:/Users/ghostcorn/ndk/toolchains/llvm/prebuild/darwin-x86_64/i686-linux-android/bin:/Users/ghostcorn/ndk/toolchains/llvm/prebuild/darwin-x86_64/arm-linux-androideabi/bin:/Users/ghostcorn/ndk/toolchains/llvm/prebuild/darwin-x86_64/aarch64-linux-android/bin:/Users/ghostcorn/.local/share/solana/install/active_release/bin:/opt/local/bin:/opt/local/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Users/ghostcorn/Library/Application Support/org.dfinity.dfx/bin:/Users/ghostcorn/.wasmedge/bin:/Users/ghostcorn/.cargo/bin:/Users/ghostcorn/.local/bin:/Users/ghostcorn/ndk/:/Users/ghostcorn/bin/:/Users/ghostcorn/.local/share/solana/install/active_release/bin:/opt/local/bin:/opt/local/sbin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Library/Apple/usr/bin:/Users/ghostcorn/Library/Application Support/org.dfinity.dfx/bin:/Users/ghostcorn/.wasmedge/bin:/Users/ghostcorn/.cargo/bin:/Users/ghostcorn/.local/bin:/Users/ghostcorn/ndk/:/Users/ghostcorn/bin/vessel:/Users/ghostcorn/.pub-cache/bin:/Users/ghostcorn/flutter/bin:/Usrs/ghostcorn/bin/didc:/Usrs/ghostcorn/bin/keysmith:/Usrs/ghostcorn/bin/vessel:/Users/ghostcorn/.foundry/bin:/Users/ghostcorn/.local/bin\" VSLANG=\"1033\" ZERO_AR_DATE=\"1\" \"cc\" \"/var/folders/0n/mlts398n6mb3hnzp_q2qsc500000gn/T/rustcH5XQ1x/symbols.o\" \"<7 object files omitted>\" \"-lcbmpc\" \"/Users/ghostcorn/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/aarch64-apple-darwin/lib/{libtest-989b59f3ae868582.rlib,libgetopts-968e2fece17d5cc4.rlib,libunicode_width-6ef477fc06856018.rlib,librustc_std_workspace_std-cae074631de478c1.rlib}\" \"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/deps/{libctor-3f718782c6fae503.rlib,libdtor-c0271cfd92771737.rlib,liblazy_static-9ab7f936be8036bd.rlib}\" \"/Users/ghostcorn/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/aarch64-apple-darwin/lib/{libstd-573e32497760bf1c.rlib,libpanic_unwind-76f300e03298d99d.rlib,libobject-78250f23c296a1f2.rlib,libmemchr-5083cf18215ea8ee.rlib,libaddr2line-ca30e0d5b6ed0ca3.rlib,libgimli-6b189ce743901ee8.rlib,librustc_demangle-fed4439cf637b585.rlib,libstd_detect-66a31607514d511b.rlib,libhashbrown-9f79784ab8533571.rlib,librustc_std_workspace_alloc-3bbc4a7842f09bbe.rlib,libminiz_oxide-3576048c4c7a6e54.rlib,libadler-29792a92db1ba745.rlib,libunwind-6947a6fbf31f2397.rlib,libcfg_if-bfdaa410fc937ed8.rlib,liblibc-3de8c0f35115a8fb.rlib,liballoc-862067b835f8cbc0.rlib,librustc_std_workspace_core-38ff204e4bd0bb02.rlib,libcore-6a16c20c3dff7df3.rlib,libcompiler_builtins-127b2e95f1a1ab85.rlib}\" \"-lSystem\" \"-lc\" \"-lm\" \"-arch\" \"arm64\" \"-mmacosx-version-min=11.0.0\" \"-L\" \"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/network/../../lib/Release\" \"-o\" \"/Users/ghostcorn/dev/cb-mpc/cb-mpc-rs/target/debug/deps/network-ff71f61decbb5b04\" \"-Wl,-dead_strip\" \"-nodefaultlibs\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: some arguments are omitted. use `--verbose` to show all linker arguments\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: Undefined symbols for architecture arm64:\u001b[0m\n\u001b[0m            \"_callback_receive\", referenced from:\u001b[0m\n\u001b[0m                network::network::init_callbacks::hda46d8f11e0d8e11 in network-ff71f61decbb5b04.1xnccxkrx831omoqdyqlx6upn.rcgu.o\u001b[0m\n\u001b[0m            \"_callback_receive_all\", referenced from:\u001b[0m\n\u001b[0m                network::network::init_callbacks::hda46d8f11e0d8e11 in network-ff71f61decbb5b04.1xnccxkrx831omoqdyqlx6upn.rcgu.o\u001b[0m\n\u001b[0m            \"_callback_send\", referenced from:\u001b[0m\n\u001b[0m                network::network::init_callbacks::hda46d8f11e0d8e11 in network-ff71f61decbb5b04.1xnccxkrx831omoqdyqlx6upn.rcgu.o\u001b[0m\n\u001b[0m            \"_set_callbacks_wrapper\", referenced from:\u001b[0m\n\u001b[0m                network::network::init_callbacks::hda46d8f11e0d8e11 in network-ff71f61decbb5b04.1xnccxkrx831omoqdyqlx6upn.rcgu.o\u001b[0m\n\u001b[0m          ld: symbol(s) not found for architecture arm64\u001b[0m\n\u001b[0m          clang: error: linker command failed with exit code 1 (use -v to see invocation)\u001b[0m\n\u001b[0m          \u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error; 169 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error; 169 warnings emitted\u001b[0m\n\n"}
